user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size 10M;  # 전체 http 블록에 적용

    server {
    		    listen 80;
    		    server_name k10b201.p.ssafy.io; # 발급한 도메인 주소
    		    server_tokens off;

    		    location /.well-known/acme-challenge/ {
    		        root /var/www/certbot; # Certbot을 통해 Let's Encrypt 인증서를 발급받을 때 사용하는 경로
    		    }

            location /oringe/api {
                        proxy_pass http://app:8050;
                        proxy_redirect off;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /cherry/api {
                        proxy_pass http://app_cherry:8060;
                        proxy_redirect off;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /sagwa/api {
                        proxy_pass http://app_sagwa:8070;
                        proxy_redirect off;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /static/ {
                        alias /app/static;
            }

#             location /static/ {
#                 alias /home/ubuntu/oringe/devway/src/main/resources/static/;
#             }

#     		    location / {
#     		        return 301 https://$host$request_uri; # 모든 HTTP 요청을 HTTPS로 리다이렉션
#     		    }
    }

    server {
        listen 443 ssl;
        server_name k10b201.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/k10b201.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/k10b201.p.ssafy.io/privkey.pem;

        location /oringe/api {
            proxy_pass http://app:8050;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /cherry/api {
            proxy_pass http://app_cherry:8060;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /sagwa/api {
                                proxy_pass http://app_sagwa:8070;
                                proxy_redirect off;
                                proxy_set_header Host $host;
                                proxy_set_header X-Real-IP $remote_addr;
                                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /static/ {
            alias /app/static;
        }
    }

    server {
        listen 80;
        server_name www.devway.kr;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name www.devway.kr;

        ssl_certificate /etc/letsencrypt/live/www.devway.kr/fullchain.pem; # Ensure you have these certificates
        ssl_certificate_key /etc/letsencrypt/live/www.devway.kr/privkey.pem;

        location / {
            proxy_pass http://app_devway:3000;  # Adjust if you have a specific app or service for this server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Define other locations if needed
    }



#
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#     access_log  /var/log/nginx/access.log  main;
#
    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}

